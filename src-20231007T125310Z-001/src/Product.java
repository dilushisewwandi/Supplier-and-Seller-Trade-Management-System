
import java.io.File;
import java.io.FileWriter;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author User
 */
public class Product extends javax.swing.JFrame {

 Queue<Products> allProducts = new LinkedList<>();
    
    public Product() {
        initComponents();
        readAllData();
        displayAllData(); 
    }
    
     void displayAllData() {
        producttext.setText("");
        for(Products products : allProducts) {
             producttext.append(products.getId() + "   " + products.getProdname() + "      " + products.getcategory()+ "      " +products.getDescription() + "      " + products.getSellingprice() + "      " + products.getPurchasequantity());
        }
    }
     
     void readAllData() {
        try {
            File supFile = new File("productdata.txt"); 
            Scanner scanner = new Scanner(supFile);
         
            while(scanner.hasNextLine()) {
                String data = scanner.nextLine();
                String[] currentdata = data.split(";");
                Products products= new Products();
                products.setId(Integer.parseInt(currentdata[0]));
               products.setPurchasequantity(Integer.parseInt(currentdata[1]));
               products.setProdname(currentdata[2]);
               products.setcategory(currentdata[3]);
               products.setDescription(currentdata[4]);
               products.setSellingprice(Integer.parseInt(currentdata[5]));
               allProducts.offer(products); // add to queue
            }
         
            scanner.close();
        } catch(Exception e) {
            e.printStackTrace();
        }
    }

      void saveAllData() {//save data to a file
    try {
        FileWriter filewriter = new FileWriter("productdata.txt"); 
        for(Products products : allProducts) {
            filewriter.write(products.getId() + "   " + products.getProdname() + "      " + products.getcategory()+ "      " +products.getDescription() + "      " + products.getSellingprice() + "      " + products.getPurchasequantity() + "\n");
             filewriter.write(products + "\n");
        }
        
        filewriter.close();
    } catch(Exception e) {
        e.printStackTrace();
    }
}
 public void deleteSupplier(int id) {
    Iterator<Products> iterator = allProducts.iterator();
    while (iterator.hasNext()) {
        Products products = iterator.next();
        if (products.getId() == id) {
            iterator.remove();
            saveAllData(); // update the data file
            return; // exit the method after deleting the first matching supplier
        }
    }
    // if no supplier with the given ID was found
    JOptionPane.showMessageDialog(null, "No product with ID " + id + " found.");
} 
 
   boolean checkID() {
    Queue<Products> productsQueue = new LinkedList<>(allProducts);
    Products products;

    while ((products = productsQueue.poll()) != null) {
        if (prodid.getText().equals(String.valueOf(products.getId()))) 
             {
            return true;
        }
    }
    return false;
}
 

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        prodid = new javax.swing.JTextField();
        prodname = new javax.swing.JTextField();
        prodcategory = new javax.swing.JTextField();
        proddescription = new javax.swing.JTextField();
        prodprice = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        producttext = new javax.swing.JTextArea();
        btnsave = new javax.swing.JButton();
        btnsearch = new javax.swing.JButton();
        btndelete = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        purchasequantity = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(51, 255, 51));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-grocery-shelf-100.png"))); // NOI18N
        jLabel1.setText("jLabel1");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel2.setText("Products");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addContainerGap(593, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jLabel2)))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 820, -1));

        jPanel2.setBackground(new java.awt.Color(153, 255, 51));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setText("Product Info");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(349, 16, -1, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setText("Product id");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(29, 87, 62, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setText("Product name");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(29, 115, -1, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setText("Category");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(29, 143, -1, -1));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel7.setText("Product description");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(29, 171, -1, -1));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel8.setText("Price");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(29, 199, 110, -1));
        jPanel2.add(prodid, new org.netbeans.lib.awtextra.AbsoluteConstraints(191, 81, 205, -1));
        jPanel2.add(prodname, new org.netbeans.lib.awtextra.AbsoluteConstraints(191, 109, 205, -1));
        jPanel2.add(prodcategory, new org.netbeans.lib.awtextra.AbsoluteConstraints(191, 137, 205, -1));
        jPanel2.add(proddescription, new org.netbeans.lib.awtextra.AbsoluteConstraints(191, 165, 205, -1));
        jPanel2.add(prodprice, new org.netbeans.lib.awtextra.AbsoluteConstraints(191, 193, 205, -1));

        producttext.setColumns(20);
        producttext.setRows(5);
        jScrollPane1.setViewportView(producttext);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 80, 360, 180));

        btnsave.setBackground(new java.awt.Color(153, 255, 153));
        btnsave.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnsave.setText("Save");
        btnsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsaveActionPerformed(evt);
            }
        });
        jPanel2.add(btnsave, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 300, 70, -1));

        btnsearch.setBackground(new java.awt.Color(153, 255, 153));
        btnsearch.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnsearch.setText("Search");
        btnsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsearchActionPerformed(evt);
            }
        });
        jPanel2.add(btnsearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 300, 70, -1));

        btndelete.setBackground(new java.awt.Color(153, 255, 153));
        btndelete.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btndelete.setText("Delete");
        btndelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeleteActionPerformed(evt);
            }
        });
        jPanel2.add(btndelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 300, 70, -1));

        jButton4.setBackground(new java.awt.Color(153, 255, 153));
        jButton4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton4.setText("Back");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 300, 70, -1));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel9.setText("Purchase quantitiy");
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 220, 140, 20));
        jPanel2.add(purchasequantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 220, 210, -1));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 130, 820, 350));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsaveActionPerformed
        // TODO add your handling code here:
        
         if(prodid.getText().equals("")||prodname.getText().equals("")||prodcategory.getText().equals("")||proddescription.getText().equals("")||prodprice.getText().equals("")||purchasequantity.getText().equals(""))
        {
           JOptionPane.showMessageDialog(null, "All fileds must be filled");
        }
        else if(checkID())
        {
             JOptionPane.showMessageDialog(null, "ID  alteady exist");
        }
        else
        {
           try{
           Products products=new Products();  
           products.setId(Integer.parseInt(prodid.getText()));
           products.setPurchasequantity(Integer.parseInt(purchasequantity.getText()));
           products.setProdname(prodname.getText());
           products.setcategory(prodcategory.getText());
           products.setDescription(proddescription.getText());
           products.setSellingprice(Integer.parseInt(prodprice.getText()));
           
           allProducts.add(products);
           
           prodid.setText("");
            purchasequantity.setText("");
             prodname.setText("");
              prodcategory.setText("");
               proddescription.setText("");
                prodprice.setText("");
                
                 displayAllData();
                 saveAllData();
           
           }
           
           catch(Exception e)
           {
               JOptionPane.showMessageDialog(null, "ID and age must be Integer"); 
           }
        }
    }//GEN-LAST:event_btnsaveActionPerformed

    private void btndeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeleteActionPerformed
       if (prodid.getText()!= null) {
        try {
            int id = Integer.parseInt(prodid.getText());
            deleteSupplier(id);
            displayAllData();
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Invalid ID format.");
        }
    }
    }//GEN-LAST:event_btndeleteActionPerformed

    private void btnsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsearchActionPerformed
          if(prodid.getText() == null || prodid.getText().equals("")) {
            return;
        }
        
        Products foundproducts = searchproducts(prodid.getText());
        if(foundproducts!= null) {
            prodid.setText(foundproducts.getId() + "");
            prodname.setText(foundproducts.getProdname());
            prodcategory.setText(foundproducts.getcategory());
            proddescription.setText(foundproducts.getDescription());
           prodprice.setText(String.valueOf(foundproducts.getSellingprice()));
            purchasequantity.setText(foundproducts.getPurchasequantity()+"");
            
        } else {
            JOptionPane.showMessageDialog(null, "Supplier not found.");
        }
    }//GEN-LAST:event_btnsearchActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        mainpage m1=new mainpage();
        m1.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton4ActionPerformed
private Products searchproducts(String input) {
        Queue<Products> queue = new LinkedList<>(allProducts);
        while(!queue.isEmpty()) {
            Products products = queue.remove();
            if(products.getId() == Integer.parseInt(input)) {
                return products;
            }
        }
        return null;
    
//put the readalldata here
    

    }  
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Product().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btndelete;
    private javax.swing.JButton btnsave;
    private javax.swing.JButton btnsearch;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField prodcategory;
    private javax.swing.JTextField proddescription;
    private javax.swing.JTextField prodid;
    private javax.swing.JTextField prodname;
    private javax.swing.JTextField prodprice;
    private javax.swing.JTextArea producttext;
    private javax.swing.JTextField purchasequantity;
    // End of variables declaration//GEN-END:variables
}
